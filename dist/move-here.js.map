{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/exports.js","src/id-generator.js","src/mathy.js","src/motion-adapters/random-motion-adapter.js","src/motion-asset.js","src/motion-direction.js","src/motion-engine.js","src/rectangle.js","src/status-constants.js","src/timer.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxBA,IAAI,EAAE,GAAG,CAAC,CAAC;;IAEU,WAAW;YAAX,WAAW;4BAAX,WAAW;;;gBAAX,WAAW;;aACjB,iBAAG;AACZ,gBAAO,EAAE,EAAE,CAAC;OACd;;;UAHiB,WAAW;;;qBAAX,WAAW;AAI/B,CAAC;;;;;;;;;;;;;;ACNF,IAAM,kBAAkB,GAAG,IAAI,CAAC,EAAE,GAAC,GAAG,CAAC;AACvC,IAAM,kBAAkB,GAAG,GAAG,GAAC,IAAI,CAAC,EAAE,CAAC;;IAElB,KAAK;YAAL,KAAK;4BAAL,KAAK;;;gBAAL,KAAK;;aACT,iBAAC,OAAO,EAAE;AACrB,gBAAO,kBAAkB,GAAG,OAAO,CAAC;OACtC;;;aACa,iBAAC,OAAO,EAAE;AACrB,gBAAO,kBAAkB,GAAG,OAAO,CAAC;OACtC;;;aACqB,yBAAC,eAAe,EAAE,eAAe,EAAE;AACtD,aAAG,AAAC,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,IAAM,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,AAAC,EAAE;AAClG,gBAAI,SAAS,GAAG,eAAe,GAAG,GAAG,GAAG,eAAe,GAAG,CAAC,eAAe,CAAC;AAC3E,gBAAI,SAAS,GAAG,eAAe,GAAG,GAAG,GAAG,eAAe,GAAG,CAAC,eAAe,CAAC;AAC3E,gBAAI,eAAe,GAAG,GAAG,GAAG,SAAS,CAAC;AACtC,gBAAI,eAAe,GAAG,GAAG,GAAG,SAAS,CAAC;AACtC,mBAAO,IAAI,CAAC,GAAG,CAAC,eAAe,GAAG,eAAe,EAAE,SAAS,GAAG,SAAS,CAAC,CAAC;UAC5E,MAAM;AACJ,gBAAI,YAAY,GAAG,eAAe,GAAG,eAAe,CAAC;AACrD,mBAAO,YAAY,GAAG,GAAG,GAAG,YAAY,GAAG,CAAC,YAAY,CAAC;UAC3D;OACH;;;aAC4B,gCAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;AACnD,aAAI,YAAY,YAAA,CAAC;;;AAGjB,aAAG,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;AACzB,wBAAY,GAAG,EAAE,GAAG,QAAQ,CAAC;;UAE/B,MAAM,IAAG,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;AACjC,2BAAY,GAAG,QAAQ,GAAG,EAAE,CAAC;;aAE/B,MAAM,IAAG,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;AAChC,8BAAY,GAAG,QAAQ,GAAG,GAAG,CAAC;;gBAEhC,MAAM;AACJ,iCAAY,GAAG,QAAQ,GAAG,EAAE,CAAC;mBAC/B;;AAED,aAAG,YAAY,GAAG,GAAG,EAAE;AACpB,wBAAY,GAAG,YAAY,GAAG,GAAG,CAAC;UACpC;;AAED,gBAAO,YAAY,CAAC;OACtB;;;aAC4B,gCAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAChD,aAAI,QAAQ,YAAA,CAAC;;;AAGb,aAAG,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;AACzB,oBAAQ,GAAG,EAAE,GAAG,KAAK,CAAC;;UAExB,MAAM,IAAG,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;AACjC,uBAAQ,GAAG,EAAE,GAAG,KAAK,CAAC;;aAExB,MAAM,IAAG,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;AAChC,0BAAQ,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC;;gBAE1B,MAAM;AACJ,6BAAQ,GAAG,EAAE,GAAG,KAAK,CAAC;mBACxB;;AAED,gBAAO,QAAQ,CAAC;OAElB;;;aAC8B,kCAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC7C,gBAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAC,EAAE,CAAA,IAAG,EAAE,GAAC,EAAE,CAAA,AAAC,GAAG,CAAC,EAAE,GAAC,EAAE,CAAA,IAAG,EAAE,GAAC,EAAE,CAAA,AAAC,CAAC,CAAC;OACtD;;;aAC8B,kCAAC,WAAW,EAAE,IAAI,EAAqB;aAAnB,UAAU,yDAAG,IAAI;;AACjE,aAAI,YAAY,GAAG,EAAC,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,CAAC,EAAC,CAAC;AAClC,aAAI,YAAY,GAAG,EAAC,GAAG,EAAC,CAAC,EAAE,GAAG,EAAC,CAAC,EAAC,CAAC;AAClC,aAAI,KAAK,GAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;;AAEzB,aAAG,UAAU,EAAE;AACZ,gBAAG,WAAW,CAAC,CAAC,GAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,AAAC,EAAE;AAC3C,2BAAY,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;AACpC,2BAAY,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC;aACvD,MAAM;AACJ,2BAAY,CAAC,GAAG,GAAG,CAAE,IAAI,CAAC,WAAW,CAAC;AACtC,2BAAY,CAAC,GAAG,GAAG,CAAE,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC;aACzD;;AAED,gBAAG,WAAW,CAAC,CAAC,GAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,AAAC,EAAE;AAC5C,2BAAY,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;AACrC,2BAAY,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC;aACxD,MAAM;AACJ,2BAAY,CAAC,GAAG,GAAG,CAAE,IAAI,CAAC,YAAY,CAAC;AACvC,2BAAY,CAAC,GAAG,GAAG,CAAE,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC;aAC1D;UACH,MAAM;AACJ,wBAAY,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AAC1B,wBAAY,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;AAC9B,wBAAY,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AAC1B,wBAAY,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;UACjC;;AAED,cAAK,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;AAC1F,cAAK,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;;AAE1F,aAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;AAC/B,iBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;UAChC,MAAM,IAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE;AACzB,iBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;UACnB;;AAED,aAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;AAChC,iBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;UACjC,MAAM,IAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE;AACzB,iBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;UACnB;;AAED,gBAAO,KAAK,CAAC;OACf;;;aAC+B,mCAAC,WAAW,EAAE,IAAI,EAAE;AACjD,aAAI,KAAK,GAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;AACzB,aAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AAC3C,iBAAO,MAAM;AACV,iBAAK,CAAC;AACH,oBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC;AACrC,oBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3D,qBAAM;AAAA,AACT,iBAAK,CAAC;AACH,oBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1D,oBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC;AACtC,qBAAM;AAAA,AACT,iBAAK,CAAC;AACH,oBAAK,CAAC,CAAC,GAAG,AAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAI,WAAW,CAAC,KAAK,CAAC;AACpD,oBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3D,qBAAM;AAAA,AACT,iBAAK,CAAC;AACH,oBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1D,oBAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;AACpD,qBAAM;AAAA,AACT;AACG,qBAAM;;AAAA,UAEX;;AAED,gBAAO,KAAK,CAAC;OACf;;;UAxIiB,KAAK;;;qBAAL,KAAK;AAyIzB,CAAC;;;;;;;;;;;;;;;;qBCvIgB,UAAU;;;;+BACT,qBAAqB;;;;AANxC,IAAM,mBAAmB,GAAG,SAAS,CAAC;AACtC,IAAM,kBAAkB,GAAG,QAAQ,CAAC;AACpC,IAAM,SAAS,GAAG,EAAE,CAAC;AACrB,IAAM,SAAS,GAAG,GAAG,CAAC;;IAKD,mBAAmB;AAC1B,YADO,mBAAmB,CACzB,iBAAiB,EAAE;4BADb,mBAAmB;;AAElC,UAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;AAC5C,UAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B;;gBAJiB,mBAAmB;;aAK7B,kBAAC,WAAW,EAAE;AACnB,aAAI,SAAS,YAAA,CAAC;AACd,aAAG,WAAW,CAAC,aAAa,KAAK,QAAQ,EAAE;AACxC,qBAAS,GAAG,mBAAM,wBAAwB,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;UAC1F,MAAM;AACJ,qBAAS,GAAG,mBAAM,yBAAyB,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;UACpF;AACD,oBAAW,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;AAC5B,oBAAW,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;;AAE5B,aAAI,gBAAgB,GAAG,mBAAM,wBAAwB,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC5F,oBAAW,CAAC,YAAY,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC9C,oBAAW,CAAC,YAAY,GAAG,gBAAgB,CAAC,CAAC,CAAC;;AAE9C,oBAAW,CAAC,MAAM,GAAG,6BAAO,KAAK,CAAC;AAClC,oBAAW,CAAC,wBAAwB,GAAG,IAAI,CAAC;;AAE5C,aAAG,WAAW,CAAC,aAAa,EAAE;AAC3B,uBAAW,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,GAAI,SAAS,GAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAA,GAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,AAAC,AAAC,CAAC;UACzI;;AAED,aAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;OACnD;;;aACK,gBAAC,kBAAkB,EAAE;;;AACxB,aAAI,gBAAgB,YAAA,CAAC;AACrB,aAAI,YAAY,YAAA,CAAC;AACjB,aAAI,eAAe,YAAA,CAAC;AACpB,aAAI,QAAQ,YAAA,CAAC;AACb,aAAI,KAAK,YAAA,CAAC;AACV,aAAI,KAAK,YAAA,CAAC;AACV,aAAI,KAAK,YAAA,CAAC;AACV,aAAI,KAAK,YAAA,CAAC;AACV,aAAI,QAAQ,YAAA,CAAC;AACb,aAAI,QAAQ,YAAA,CAAC;AACb,aAAI,UAAU,YAAA,CAAC;AACf,aAAI,YAAY,YAAA,CAAC;AACjB,aAAI,gBAAgB,YAAA,CAAC;AACrB,aAAI,WAAW,YAAA,CAAC;AAChB,aAAI,gBAAgB,YAAA,CAAC;AACrB,aAAI,aAAa,YAAA,CAAC;AAClB,aAAI,QAAQ,YAAA,CAAC;;AAEb,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AAC9C,uBAAW,GAAG,MAAK,aAAa,CAAC,GAAG,CAAC,CAAC;;AAEtC,gBAAG,WAAW,CAAC,QAAQ,KAAK,CAAC,CAAC,EAAE;AAC7B,+BAAgB,GAAG,AAAC,kBAAkB,GAAG,WAAW,CAAC,QAAQ,IAAK,WAAW,CAAC,QAAQ,CAAC;aACzF,MAAM;AACJ,+BAAgB,GAAG,KAAK,CAAC;aAC3B;;AAED,gBAAI,WAAW,CAAC,aAAa,EAAE;AAC5B,uBAAQ,GAAG,SAAS,GAAI,AAAC,CAAC,WAAW,CAAC,CAAC,GAAG,MAAK,kBAAkB,CAAC,CAAC,CAAA,GAAI,MAAK,kBAAkB,CAAC,MAAM,IAAK,SAAS,GAAG,SAAS,CAAA,AAAC,AAAC,CAAC;AAClI,mBAAI,QAAQ,GAAG,SAAS,EAAE;AACvB,0BAAQ,GAAG,SAAS,CAAC;gBACvB;AACD,mBAAG,QAAQ,GAAG,SAAS,EAAE;AACtB,0BAAQ,GAAG,SAAS,CAAC;gBACvB;;AAED,0BAAW,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,GAAG,QAAQ,CAAC;aACrD;;AAED,gBAAG,gBAAgB,IAAI,WAAW,CAAC,MAAM,KAAK,6BAAO,KAAK,EAAE;AACzD,0BAAW,CAAC,MAAM,GAAG,6BAAO,KAAK,CAAC;;AAElC,+BAAgB,GAAG,mBAAM,yBAAyB,CAAC,WAAW,EAAE,MAAK,kBAAkB,CAAC,CAAC;AACzF,0BAAW,CAAC,YAAY,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC9C,0BAAW,CAAC,YAAY,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC9C,0BAAW,CAAC,wBAAwB,GAAG,IAAI,CAAC;AAC5C,0BAAW,CAAC,cAAc,GAAG,CAAC,CAAC;aACjC;;AAED,2BAAe,GAAG,WAAW,CAAC,QAAQ,CAAC;;AAEvC,oBAAQ,GAAG,mBAAM,wBAAwB,CAAC,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,YAAY,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC;AAC5H,iBAAK,GAAG,WAAW,CAAC,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC;AACjD,iBAAK,GAAG,WAAW,CAAC,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC;;AAEjD,sBAAU,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAClE,yBAAa,GAAG,mBAAM,sBAAsB,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACvE,wBAAY,GAAG,mBAAM,eAAe,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;;AAErE,gBAAG,YAAY,IAAI,WAAW,CAAC,gBAAgB,EAAE;AAC9C,8BAAe,GAAG,aAAa,CAAC;AAChC,2BAAY,GAAG,mBAAM,sBAAsB,CAAC,eAAe,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7E,MAAM;AACJ,2BAAY,GAAG,mBAAM,sBAAsB,CAAC,eAAe,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;;AAE3E,mBAAG,WAAW,CAAC,wBAAwB,EAAE;AACtC,6BAAW,CAAC,wBAAwB,GAAG,KAAK,CAAC;AAC7C,sBAAG,UAAU,GAAG,eAAe,EAAE;AAC9B,gCAAW,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;mBACrC,MAAM;AACJ,gCAAW,CAAC,iBAAiB,GAAG,CAAC,CAAC;mBACpC;gBACH;;;;;AAKD,+BAAgB,GAAI,WAAW,CAAC,cAAc,GAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,cAAc,GAAC,GAAG,AAAC,CAAC;;AAE9F,2BAAY,IAAI,WAAW,CAAC,iBAAiB,GAAG,WAAW,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAChG,8BAAe,IAAI,WAAW,CAAC,iBAAiB,GAAG,WAAW,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;aACrG;;AAED,uBAAW,CAAC,cAAc,IAAI,mBAAM,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;AAC3F,uBAAW,CAAC,QAAQ,GAAG,eAAe,CAAC;;AAEvC,gBAAG,KAAK,GAAG,CAAC,EAAE;AACX,oBAAK,GAAG,WAAW,CAAC,CAAC,GAAI,IAAI,CAAC,GAAG,CAAC,mBAAM,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,WAAW,CAAC,aAAa,AAAC,CAAC;AAC5F,oBAAK,GAAG,WAAW,CAAC,CAAC,GAAI,IAAI,CAAC,GAAG,CAAC,mBAAM,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,WAAW,CAAC,aAAa,AAAC,CAAC;aAC9F,MAAM;AACJ,oBAAK,GAAG,WAAW,CAAC,CAAC,GAAI,IAAI,CAAC,GAAG,CAAC,mBAAM,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,WAAW,CAAC,aAAa,AAAC,CAAC;AAC5F,oBAAK,GAAG,WAAW,CAAC,CAAC,GAAI,IAAI,CAAC,GAAG,CAAC,mBAAM,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,WAAW,CAAC,aAAa,AAAC,CAAC;aAC9F;;AAED,oBAAQ,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC;AACxC,oBAAQ,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC;;AAExC,gBAAG,QAAQ,GAAG,WAAW,CAAC,aAAa,IAAI,QAAQ,GAAG,WAAW,CAAC,aAAa,EAAE;AAC9E,mBAAG,WAAW,CAAC,MAAM,KAAK,6BAAO,KAAK,EAAE;AACrC,6BAAW,CAAC,CAAC,GAAG,WAAW,CAAC,YAAY,CAAC;AACzC,6BAAW,CAAC,CAAC,GAAG,WAAW,CAAC,YAAY,CAAC;;AAEzC,kCAAgB,GAAG,mBAAM,wBAAwB,CAAC,WAAW,EAAE,MAAK,kBAAkB,CAAC,CAAC;AACxF,6BAAW,CAAC,YAAY,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC9C,6BAAW,CAAC,YAAY,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC9C,6BAAW,CAAC,wBAAwB,GAAG,IAAI,CAAC;AAC5C,6BAAW,CAAC,cAAc,GAAG,CAAC,CAAC;gBACjC,MAAM;;AAEJ,6BAAW,CAAC,MAAM,GAAG,6BAAO,IAAI,CAAC;AACjC,yBAAO,MAAK,aAAa,CAAC,GAAG,CAAC,CAAC;gBACjC;aACH,MAAM;AACJ,0BAAW,CAAC,CAAC,GAAG,KAAK,CAAC;AACtB,0BAAW,CAAC,CAAC,GAAG,KAAK,CAAC;aACxB;UACH,CAAC,CAAC;OACL;;;UAlJiB,mBAAmB;;;qBAAnB,mBAAmB;AAmJvC,CAAC;;;;;;;;;;;;;;;;+BC3J0B,oBAAoB;;;;2BACxB,gBAAgB;;;;+BACrB,oBAAoB;;;;AAEvC,IAAM,iBAAiB,GAAG,EAAE,CAAC;AAC7B,IAAM,sBAAsB,GAAG,CAAC,CAAC;;IAEZ,WAAW;AAClB,YADO,WAAW,CACjB,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa,EAAE;4BAD3H,WAAW;;AAE1B,UAAI,CAAC,GAAG,GAAG,yBAAY,KAAK,EAAE,CAAC;AAC/B,UAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,UAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC;AACxC,UAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,UAAI,CAAC,eAAe,GAAG,cAAc,CAAC;AACtC,UAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;AAC5C,UAAI,CAAC,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB,CAAC;AAC/D,UAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;AACxC,UAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;AAC5C,UAAI,CAAC,cAAc,GAAG,cAAc,GAAG,iBAAiB,CAAC;AACzD,UAAI,CAAC,cAAc,GAAG,aAAa,CAAC;AACpC,UAAI,CAAC,cAAc,GAAG,aAAa,CAAC;AACpC,UAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;AACvC,UAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AACvB,UAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AACvB,UAAI,CAAC,OAAO,GAAG,6BAAO,IAAI,CAAC;AAC3B,UAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AACzB,UAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;AAC5B,UAAI,CAAC,cAAc,GAAG,CAAC,CAAC;;;AAGxB,UAAG,IAAI,CAAC,iBAAiB,GAAG,sBAAsB,EAAE;AACjD,aAAI,CAAC,iBAAiB,GAAG,sBAAsB,CAAC;OAClD;IACH;;gBA1BiB,WAAW;;WA2BvB,eAAG;AACN,gBAAO,IAAI,CAAC,GAAG,CAAC;OAClB;;;WACS,eAAG;AACV,gBAAO,IAAI,CAAC,OAAO,CAAC;OACtB;;;WACW,eAAG;AACZ,gBAAO,IAAI,CAAC,SAAS,CAAC;OACxB;;;WACiB,eAAG;AAClB,gBAAO,IAAI,CAAC,eAAe,CAAC;OAC9B;;;WACgB,eAAG;AACjB,gBAAO,IAAI,CAAC,cAAc,CAAC;OAC7B;;;WACS,aAAC,MAAM,EAAE;AAChB,aAAI,CAAC,OAAO,GAAG,MAAM,CAAC;OACxB;WACS,eAAG;AACV,gBAAO,IAAI,CAAC,OAAO,CAAC;OACtB;;;WACW,aAAC,kBAAkB,EAAE;AAC9B,aAAI,CAAC,uBAAuB,GAAG,kBAAkB,CAAC;OACpD;WACW,eAAG;AACZ,gBAAO,IAAI,CAAC,uBAAuB,CAAC;OACtC;;;WACI,aAAC,CAAC,EAAE;AACN,aAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;OACrB;WACI,eAAG;AACL,gBAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;OACxB;;;WACI,aAAC,CAAC,EAAE;AACN,aAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;OACrB;WACI,eAAG;AACL,gBAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;OACxB;;;WACQ,eAAG;AACT,gBAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC;OACjC;;;WACS,eAAG;AACV,gBAAO,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;OAClC;;;WACW,aAAC,QAAQ,EAAE;AACpB,aAAG,IAAI,CAAC,kBAAkB,EAAE;AACzB,gBAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;UACnC,MAAM;AACJ,gBAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;UACjC;OACH;WACW,eAAG;AACZ,aAAG,IAAI,CAAC,kBAAkB,EAAE;AACzB,mBAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;UAC/B,MAAM;AACJ,mBAAO,IAAI,CAAC,cAAc,CAAC;UAC7B;OACH;;;WACe,aAAC,CAAC,EAAE;AACjB,aAAI,CAAC,aAAa,GAAG,CAAC,CAAC;OACzB;WACe,eAAG;AAChB,gBAAO,IAAI,CAAC,aAAa,CAAC;OAC5B;;;WACe,aAAC,CAAC,EAAE;AACjB,aAAI,CAAC,aAAa,GAAG,CAAC,CAAC;OACzB;WACe,eAAG;AAChB,gBAAO,IAAI,CAAC,aAAa,CAAC;OAC5B;;;WACoB,eAAG;AACrB,gBAAO,IAAI,CAAC,kBAAkB,CAAC;OACjC;;;WACmB,eAAG;AACpB,gBAAO,IAAI,CAAC,iBAAiB,CAAC;OAChC;;;WACkB,eAAG;AACnB,gBAAO,IAAI,CAAC,gBAAgB,CAAC;OAC/B;;;WACoB,aAAC,IAAI,EAAE;AACzB,aAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;OACjC;WACoB,eAAG;AACrB,gBAAO,IAAI,CAAC,kBAAkB,CAAC;OACjC;;;WAC2B,aAAC,wBAAwB,EAAE;AACpD,aAAI,CAAC,yBAAyB,GAAG,wBAAwB,CAAC;OAC5D;WAC2B,eAAG;AAC5B,gBAAO,IAAI,CAAC,yBAAyB,CAAC;OACxC;;;WACiB,aAAC,cAAc,EAAE;AAChC,aAAI,CAAC,eAAe,GAAG,cAAc,CAAC;OACxC;WACiB,eAAG;AAClB,gBAAO,IAAI,CAAC,eAAe,CAAC;OAC9B;;;WACoB,aAAC,iBAAiB,EAAE;AACtC,aAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;OAC9C;WACoB,eAAG;AACrB,gBAAO,IAAI,CAAC,kBAAkB,CAAC;OACjC;;;WACgB,aAAC,aAAa,EAAE;AAC9B,aAAI,CAAC,cAAc,GAAG,aAAa,CAAC;OACtC;WACgB,eAAG;AACjB,gBAAO,IAAI,CAAC,cAAc,CAAC;OAC7B;;;WACgB,aAAC,aAAa,EAAE;AAC9B,aAAI,CAAC,cAAc,GAAG,aAAa,CAAC;OACtC;WACgB,eAAG;AACjB,gBAAO,IAAI,CAAC,cAAc,CAAC;OAC7B;;;UA9IiB,WAAW;;;qBAAX,WAAW;;;;;;ACPhC,IAAI,eAAe,GAAG,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE;AAC/C,iBAAc,EAAE;AACb,gBAAU,EAAE,IAAI;AAChB,WAAK,EAAE,aAAa;IACtB;CACH,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;;;;;;;;;;;;;;;yBCPX,aAAa;;;;+BACP,oBAAoB;;;;iDAChB,yCAAyC;;;;qBACvD,SAAS;;;;2BACH,gBAAgB;;;;AAExC,IAAM,YAAY,GAAG,IAAI,CAAC;AAC1B,IAAM,oBAAoB,GAAG,EAAE,CAAC;AAChC,IAAM,2BAA2B,GAAG,CAAC,CAAC;;IAEjB,YAAY;AACnB,YADO,YAAY,GACI;UAAtB,IAAI,yDAAC,4BAAe;;4BADd,YAAY;;AAE3B,UAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAC/B,UAAI,CAAC,MAAM,GAAG,wBAAW,CAAC;AAC1B,UAAI,CAAC,YAAY,GAAG,EAAE,CAAC;;AAEvB,UAAI,mBAAmB,GAAG,mDAAwB,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC3E,UAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;;AAExF,UAAI,CAAC,YAAY,CAAC,6BAAgB,YAAY,CAAC,GAAG,mBAAmB,CAAC;IACxE;;gBAViB,YAAY;;aAczB,iBAAG;AACL,aAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;OACrB;;;aACG,gBAAG;AACJ,aAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;OACtB;;;aACO,oBAAoQ;0EAAJ,EAAE;;gCAAhQ,MAAM;aAAN,MAAM,+BAAC,IAAI;yCAAE,eAAe;aAAf,eAAe,wCAAC,6BAAgB,YAAY;kCAAE,QAAQ;aAAR,QAAQ,iCAAG,YAAY;wCAAE,cAAc;aAAd,cAAc,uCAAG,oBAAoB;+CAAE,qBAAqB;aAArB,qBAAqB,8CAAG,2BAA2B;2CAAE,iBAAiB;aAAjB,iBAAiB,0CAAG,IAAI;uCAAE,aAAa;aAAb,aAAa,sCAAG,KAAK;uCAAE,aAAa;aAAb,aAAa,sCAAG,SAAS;;;AAEjQ,aAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;AACvD,aAAG,CAAC,aAAa,EAAE;AAChB,kBAAM,IAAI,KAAK,CAAC,4EAA4E,GAAG,eAAe,GAAG,GAAG,CAAC,CAAC;UACxH;;AAED,aAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,qBAAqB,CAAC,CAAC;AACvE,aAAI,WAAW,GAAG,6BAAgB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,iBAAiB,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;;AAEvK,sBAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;;AAEpC,gBAAO,WAAW,CAAC;OACrB;;;WAtBS,eAAE;AACT,gBAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;OAC5B;;;UAbiB,YAAY;;;qBAAZ,YAAY;;;;;;;;;;;;;;ICVZ,SAAS;AAChB,YADO,SAAS,GACsB;uEAAJ,EAAE;;wBAAlC,CAAC;UAAD,CAAC,0BAAC,CAAC;wBAAE,CAAC;UAAD,CAAC,0BAAC,CAAC,CAAC;4BAAE,KAAK;UAAL,KAAK,8BAAC,CAAC;6BAAE,MAAM;UAAN,MAAM,+BAAC,CAAC;;4BADvB,SAAS;;AAExB,UAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACZ,UAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACZ,UAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,UAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,UAAI,CAAC,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC;AAC5B,UAAI,CAAC,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC;AAC9B,UAAI,CAAC,YAAY,GAAG,KAAK,GAAG,CAAC,CAAC;AAC9B,UAAI,CAAC,aAAa,GAAG,MAAM,GAAG,CAAC,CAAC;IAClC;;gBAViB,SAAS;;WAYtB,aAAC,KAAK,EAAC;AACT,aAAI,CAAC,EAAE,GAAG,KAAK,CAAC;OAClB;WAEI,eAAE;AACJ,gBAAO,IAAI,CAAC,EAAE,CAAC;OACjB;;;WAEI,aAAC,KAAK,EAAC;AACT,aAAI,CAAC,EAAE,GAAG,KAAK,CAAC;OAClB;WAEI,eAAE;AACJ,gBAAO,IAAI,CAAC,EAAE,CAAC;OACjB;;;WAEQ,aAAC,KAAK,EAAC;AACb,aAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,aAAI,CAAC,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC;AAC5B,aAAI,CAAC,YAAY,GAAG,KAAK,GAAG,CAAC,CAAC;OAChC;WAEQ,eAAE;AACR,gBAAO,IAAI,CAAC,MAAM,CAAC;OACrB;;;WAES,aAAC,KAAK,EAAC;AACd,aAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,aAAI,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,CAAC;AAC7B,aAAI,CAAC,aAAa,GAAG,KAAK,GAAG,CAAC,CAAC;OACjC;WAES,eAAE;AACT,gBAAO,IAAI,CAAC,OAAO,CAAC;OACtB;;;WAEY,eAAG;AACb,gBAAO,IAAI,CAAC,UAAU,CAAC;OACzB;;;WAEa,eAAG;AACd,gBAAO,IAAI,CAAC,WAAW,CAAC;OAC1B;;;WAEc,eAAG;AACf,gBAAO,IAAI,CAAC,YAAY,CAAC;OAC3B;;;WAEe,eAAG;AAChB,gBAAO,IAAI,CAAC,aAAa,CAAC;OAC5B;;;UA9DiB,SAAS;;;qBAAT,SAAS;;;;;;;;;qBCAf,MAAM,CAAC,MAAM,CAAC;AAC1B,OAAI,EAAE,MAAM;AACZ,QAAK,EAAE,OAAO;AACd,QAAK,EAAE,OAAO;AACd,OAAI,EAAE,MAAM;CACd,CAAC;;;;;;;;;;;;;;ICLmB,KAAK;AACZ,YADO,KAAK,GACT;4BADI,KAAK;;AAEpB,UAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAChC,UAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,UAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,UAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACnB,UAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;AAC7B,UAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAChC;;gBARiB,KAAK;;aASlB,iBAAG;;;AACL,aAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAChC,aAAI,CAAC,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;AACtC,aAAI,CAAC,mBAAmB,IAAK,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,AAAC,CAAC;AACjE,aAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;AACnC,aAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,UAAC,iBAAiB,EAAK;AACnD,6BAAiB,CAAC,MAAK,mBAAmB,CAAC,CAAC;UAC9C,CAAC,CAAC;AACH,aAAG,CAAC,IAAI,CAAC,OAAO,EAAE;AACf,gBAAI,CAAC,mBAAmB,GAAG,qBAAqB,CAAC;sBAAM,MAAK,KAAK,EAAE;aAAA,CAAC,CAAC;UACvE;OACH;;;aAOoB,+BAAC,YAAY,EAAE;AACjC,aAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;OAC9C;;;aACG,gBAAG;;;AACJ,aAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,aAAI,CAAC,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;AACnC,aAAI,CAAC,mBAAmB,GAAG,qBAAqB,CAAC;mBAAM,OAAK,KAAK,EAAE;UAAA,CAAC,CAAC;OACvE;;;aACI,iBAAG;AACL,aAAG,IAAI,CAAC,mBAAmB,EAAE;AAC1B,gCAAoB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC/C,gBAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;UAClC;AACD,aAAI,CAAC,OAAO,GAAG,IAAI,CAAC;OACtB;;;WApBS,eAAG;AACV,gBAAO,IAAI,CAAC,OAAO,CAAC;OACtB;;;WACO,eAAG;AACR,gBAAO,IAAI,CAAC,mBAAmB,CAAC;OAClC;;;UA1BiB,KAAK;;;qBAAL,KAAK","file":"move-here.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (global){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _rectangle = require('./rectangle');\n\nvar _rectangle2 = _interopRequireDefault(_rectangle);\n\nvar _motionDirection = require('./motion-direction');\n\nvar _motionDirection2 = _interopRequireDefault(_motionDirection);\n\nvar _motionEngine = require('./motion-engine');\n\nvar _motionEngine2 = _interopRequireDefault(_motionEngine);\n\nvar MoveHere = global.MoveHere = global.MoveHere || {};\n\nMoveHere.MotionDirection = _motionDirection2['default'];\nMoveHere.Rectangle = _rectangle2['default'];\nMoveHere.MotionEngine = _motionEngine2['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iLnJob2Rlcy9HaXRodWIvbW92ZS1oZXJlLWpzL3NyYy9leHBvcnRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O3lCQUVzQixhQUFhOzs7OytCQUNQLG9CQUFvQjs7Ozs0QkFDdkIsaUJBQWlCOzs7O0FBSjFDLElBQUksUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUM7O0FBTXZELFFBQVEsQ0FBQyxlQUFlLCtCQUFrQixDQUFDO0FBQzNDLFFBQVEsQ0FBQyxTQUFTLHlCQUFZLENBQUM7QUFDL0IsUUFBUSxDQUFDLFlBQVksNEJBQWUsQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIE1vdmVIZXJlID0gZ2xvYmFsLk1vdmVIZXJlID0gZ2xvYmFsLk1vdmVIZXJlIHx8IHt9O1xuXG5pbXBvcnQgUmVjdGFuZ2xlIGZyb20gJy4vcmVjdGFuZ2xlJztcbmltcG9ydCBNb3Rpb25EaXJlY3Rpb24gZnJvbSAnLi9tb3Rpb24tZGlyZWN0aW9uJztcbmltcG9ydCBNb3Rpb25FbmdpbmUgZnJvbSAnLi9tb3Rpb24tZW5naW5lJztcblxuTW92ZUhlcmUuTW90aW9uRGlyZWN0aW9uID0gTW90aW9uRGlyZWN0aW9uO1xuTW92ZUhlcmUuUmVjdGFuZ2xlID0gUmVjdGFuZ2xlO1xuTW92ZUhlcmUuTW90aW9uRW5naW5lID0gTW90aW9uRW5naW5lOyJdfQ==","let id = 0;\n\nexport default class IdGenerator {\n   static getId() {\n      return id++;\n   }\n};","const RADIANS_CONVERSION = Math.PI/180;\nconst DEGREES_CONVERSION = 180/Math.PI;\n\nexport default class Mathy {\n   static radians(degrees) {\n      return RADIANS_CONVERSION * degrees;\n   }\n   static degrees(radians) {\n      return DEGREES_CONVERSION * radians;\n   }\n   static getMinAngleDiff(angleInDegrees1, angleInDegrees2) {\n      if((angleInDegrees1 <= 0 && angleInDegrees2 >= 0) || (angleInDegrees1 >= 0 && angleInDegrees2 <= 0)) {\n         let angle1Abs = angleInDegrees1 > 0.0 ? angleInDegrees1 : -angleInDegrees1;\n         let angle2Abs = angleInDegrees2 > 0.0 ? angleInDegrees2 : -angleInDegrees2;\n         let angle1Remainder = 180 - angle1Abs;\n         let angle2Remainder = 180 - angle2Abs;\n         return Math.min(angle1Remainder + angle2Remainder, angle1Abs + angle2Abs);\n      } else {\n         let rotationDiff = angleInDegrees1 - angleInDegrees2;\n         return rotationDiff > 0.0 ? rotationDiff : -rotationDiff;\n      }\n   }\n   static convertRotationToAngle(rotation, xDiff, yDiff) {\n      let currentAngle;\n\n      // Quad 1\n      if(xDiff >= 0 && yDiff < 0) {\n         currentAngle = 90 + rotation;\n         // Quad 2\n      } else if(xDiff >= 0 && yDiff >= 0) {\n         currentAngle = rotation - 90;\n         // Quad 3\n      } else if(xDiff < 0 && yDiff >= 0) {\n         currentAngle = rotation + 270;\n         // Quad 4\n      } else {\n         currentAngle = rotation + 90;\n      }\n\n      if(currentAngle > 360) {\n         currentAngle = currentAngle - 360;\n      }\n\n      return currentAngle;\n   }\n   static convertAngleToRotation(angle, xDiff, yDiff) {\n      let rotation;\n\n      // Quad 1\n      if(xDiff >= 0 && yDiff < 0) {\n         rotation = 90 - angle;\n         // Quad 2\n      } else if(xDiff >= 0 && yDiff >= 0) {\n         rotation = 90 + angle;\n         // Quad 3\n      } else if(xDiff < 0 && yDiff >= 0) {\n         rotation = -270 + angle;\n         // Quad 4\n      } else {\n         rotation = 90 - angle;\n      }\n\n      return rotation;\n\n   }\n   static distanceBetweenTwoPoints(x1, y1, x2, y2) {\n      return Math.sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));\n   }\n   static getRandomPointInsideRect(motionAsset, rect, uniqueQuad = true) {\n      let randomXRange = {min:0, max:0};\n      let randomYRange = {min:0, max:0};\n      let point = {x: 0, y: 0};\n\n      if(uniqueQuad) {\n         if(motionAsset.x < (rect.x + rect.halfWidth)) {\n            randomXRange.min = rect.eighthWidth;\n            randomXRange.max = rect.halfWidth - randomXRange.min;\n         } else {\n            randomXRange.min = - rect.eighthWidth;\n            randomXRange.max = - rect.halfWidth - randomXRange.min;\n         }\n\n         if(motionAsset.y < (rect.y + rect.halfHeight)) {\n            randomYRange.min = rect.eighthHeight;\n            randomYRange.max = rect.halfHeight - randomYRange.min;\n         } else {\n            randomYRange.min = - rect.eighthHeight;\n            randomYRange.max = - rect.halfHeight - randomYRange.min;\n         }\n      } else {\n         randomXRange.min = rect.x;\n         randomXRange.max = rect.width;\n         randomYRange.min = rect.y;\n         randomYRange.max = rect.height;\n      }\n\n      point.x = motionAsset.x + Math.round(randomXRange.min + Math.random() * randomXRange.max);\n      point.y = motionAsset.y + Math.round(randomYRange.min + Math.random() * randomYRange.max);\n\n      if(point.x > rect.x + rect.width) {\n         point.x = rect.x + rect.width;\n      } else if(point.x < rect.x) {\n         point.x = rect.x;\n      }\n\n      if(point.y > rect.y + rect.height) {\n         point.y = rect.y + rect.height;\n      } else if(point.y < rect.y) {\n         point.y = rect.y;\n      }\n\n      return point;\n   }\n   static getRandomPointOutsideRect(motionAsset, rect) {\n      let point = {x: 0, y: 0};\n      let region = Math.floor(Math.random() * 4);\n      switch(region) {\n         case 0:\n            point.x = rect.x - motionAsset.width;\n            point.y = rect.y + Math.round(Math.random() * rect.height);\n            break;\n         case 1:\n            point.x = rect.x + Math.round(Math.random() * rect.width);\n            point.y = rect.y - motionAsset.height;\n            break;\n         case 2:\n            point.x = (rect.x + rect.width) + motionAsset.width;\n            point.y = rect.y + Math.round(Math.random() * rect.height);\n            break;\n         case 3:\n            point.x = rect.x + Math.round(Math.random() * rect.width);\n            point.y = rect.y + rect.height + motionAsset.height;\n            break;\n         default:\n            break;\n\n      }\n\n      return point;\n   }\n};","const OUTSIDE_TARGET_AREA = 'outside';\nconst INSIDE_TARGET_AREA = 'inside';\nconst MIN_SCALE = .5;\nconst MAX_SCALE = 1.5;\n\nimport Mathy from '../mathy';\nimport Status from '../status-constants';\n\nexport default class RandomMotionAdapter {\n   constructor(boundingRectangle) {\n      this._boundingRectangle = boundingRectangle;\n      this._motionAssets = {};\n   }\n   addAsset(motionAsset) {\n      let initPoint;\n      if(motionAsset.spawnLocation === 'inside') {\n         initPoint = Mathy.getRandomPointInsideRect(motionAsset, this._boundingRectangle, false);\n      } else {\n         initPoint = Mathy.getRandomPointOutsideRect(motionAsset, this._boundingRectangle);\n      }\n      motionAsset.x = initPoint.x;\n      motionAsset.y = initPoint.y;\n\n      let destinationPoint = Mathy.getRandomPointInsideRect(motionAsset, this._boundingRectangle);\n      motionAsset.destinationX = destinationPoint.x;\n      motionAsset.destinationY = destinationPoint.y;\n\n      motionAsset.status = Status.ALIVE;\n      motionAsset.acquireRotationDirection = true;\n\n      if(motionAsset.simulateDepth) {\n         motionAsset.scaleX = motionAsset.scaleY = (MIN_SCALE + ((motionAsset.y - this._boundingRectangle.y) / this._boundingRectangle.height));\n      }\n\n      this._motionAssets[motionAsset.id] = motionAsset;\n   }\n   update(timeInMilliseconds) {\n      let isAssetOutOfTime;\n      let currentAngle;\n      let currentRotation;\n      let distance;\n      let nextX;\n      let nextY;\n      let xDiff;\n      let yDiff;\n      let absXDiff;\n      let absYDiff;\n      let finalAngle;\n      let rotationDiff;\n      let rotationModifier;\n      let motionAsset;\n      let destinationPoint;\n      let rotationAngle;\n      let newScale;\n\n      Object.keys(this._motionAssets).forEach((key) => {\n         motionAsset = this._motionAssets[key];\n\n         if(motionAsset.duration !== -1) {\n            isAssetOutOfTime = (timeInMilliseconds - motionAsset.initTime) >= motionAsset.duration;\n         } else {\n            isAssetOutOfTime = false;\n         }\n\n         if (motionAsset.simulateDepth) {\n            newScale = MIN_SCALE + (((motionAsset.y - this._boundingRectangle.y) / this._boundingRectangle.height) * (MAX_SCALE - MIN_SCALE));\n            if (newScale < MIN_SCALE) {\n               newScale = MIN_SCALE;\n            }\n            if(newScale > MAX_SCALE) {\n               newScale = MAX_SCALE;\n            }\n\n            motionAsset.scaleX = motionAsset.scaleY = newScale;\n         }\n\n         if(isAssetOutOfTime && motionAsset.status === Status.ALIVE) {\n            motionAsset.status = Status.DYING;\n\n            destinationPoint = Mathy.getRandomPointOutsideRect(motionAsset, this._boundingRectangle);\n            motionAsset.destinationX = destinationPoint.x;\n            motionAsset.destinationY = destinationPoint.y;\n            motionAsset.acquireRotationDirection = true;\n            motionAsset.rotationAmount = 0;\n         }\n\n         currentRotation = motionAsset.rotation;\n\n         distance = Mathy.distanceBetweenTwoPoints(motionAsset.x, motionAsset.y, motionAsset.destinationX, motionAsset.destinationY);\n         xDiff = motionAsset.destinationX - motionAsset.x;\n         yDiff = motionAsset.destinationY - motionAsset.y;\n\n         finalAngle = Math.round(Mathy.degrees(Math.acos(xDiff/distance)));\n         rotationAngle = Mathy.convertAngleToRotation(finalAngle, xDiff, yDiff);\n         rotationDiff = Mathy.getMinAngleDiff(rotationAngle, currentRotation);\n\n         if(rotationDiff <= motionAsset.rotationPerFrame) {\n            currentRotation = rotationAngle;\n            currentAngle = Mathy.convertRotationToAngle(currentRotation, xDiff, yDiff);\n         } else {\n            currentAngle = Mathy.convertRotationToAngle(currentRotation, xDiff, yDiff);\n\n            if(motionAsset.acquireRotationDirection) {\n               motionAsset.acquireRotationDirection = false;\n               if(finalAngle < currentRotation) {\n                  motionAsset.rotationDirection = -1;\n               } else {\n                  motionAsset.rotationDirection = 1;\n               }\n            }\n\n            // determine rotation modifier, this only comes into play when an object has rotated more than\n            // 360 degrees around the destination point.  We need to increase the speed of rotation to it\n            // so it can reach its destination eventually.\n            rotationModifier = (motionAsset.rotationAmount/360 <= 1 ? 1 : motionAsset.rotationAmount/360);\n\n            currentAngle += motionAsset.rotationDirection * motionAsset.rotationPerFrame * rotationModifier;\n            currentRotation += motionAsset.rotationDirection * motionAsset.rotationPerFrame * rotationModifier;\n         }\n\n         motionAsset.rotationAmount += Mathy.getMinAngleDiff(motionAsset.rotation, currentRotation);\n         motionAsset.rotation = currentRotation;\n\n         if(yDiff < 0) {\n            nextX = motionAsset.x - (Math.cos(Mathy.radians(currentAngle)) * motionAsset.unitsPerFrame);\n            nextY = motionAsset.y - (Math.sin(Mathy.radians(currentAngle)) * motionAsset.unitsPerFrame);\n         } else {\n            nextX = motionAsset.x + (Math.cos(Mathy.radians(currentAngle)) * motionAsset.unitsPerFrame);\n            nextY = motionAsset.y + (Math.sin(Mathy.radians(currentAngle)) * motionAsset.unitsPerFrame);\n         }\n\n         absXDiff = xDiff > 0.0 ? xDiff : -xDiff;\n         absYDiff = yDiff > 0.0 ? yDiff : -yDiff;\n\n         if(absXDiff < motionAsset.unitsPerFrame && absYDiff < motionAsset.unitsPerFrame) {\n            if(motionAsset.status === Status.ALIVE) {\n               motionAsset.x = motionAsset.destinationX;\n               motionAsset.y = motionAsset.destinationY;\n\n               destinationPoint = Mathy.getRandomPointInsideRect(motionAsset, this._boundingRectangle);\n               motionAsset.destinationX = destinationPoint.x;\n               motionAsset.destinationY = destinationPoint.y;\n               motionAsset.acquireRotationDirection = true;\n               motionAsset.rotationAmount = 0;\n            } else {\n               // TODO: notify that asset is dead\n               motionAsset.status = Status.DEAD;\n               delete this._motionAssets[key];\n            }\n         } else {\n            motionAsset.x = nextX;\n            motionAsset.y = nextY;\n         }\n      });\n   }\n};","import MotionDirection from './motion-direction';\nimport IdGenerator from './id-generator';\nimport Status from './status-constants';\n\nconst TARGET_FRAME_RATE = 60;\nconst MIN_ROTATION_PER_FRAME = 1;\n\nexport default class MotionAsset {\n   constructor(target, initTime, duration, unitsPerSecond, rotationPerSecond, motionDirection, rotateToDirection, simulateDepth, spawnLocation) {\n      this._id = IdGenerator.getId();\n      this._target = target;\n      this._initTimeInMilliseconds = initTime;\n      this._duration = duration;\n      this._unitsPerSecond = unitsPerSecond;\n      this._rotationPerSecond = rotationPerSecond;\n      this._rotationPerFrame = rotationPerSecond / TARGET_FRAME_RATE;\n      this._motionDirection = motionDirection;\n      this._rotateToDirection = rotateToDirection;\n      this._unitsPerFrame = unitsPerSecond / TARGET_FRAME_RATE;\n      this._simulateDepth = simulateDepth;\n      this._spawnLocation = spawnLocation;\n      this._acquireRotationDirection = false;\n      this._destinationX = 0;\n      this._destinationY = 0;\n      this._status = Status.BORN;\n      this._rotationAmount = 0;\n      this._rotationDirection = 1;\n      this._rotationProxy = 0;\n\n      // check rotation per frame value to avoid pathing issues\n      if(this._rotationPerFrame < MIN_ROTATION_PER_FRAME) {\n         this._rotationPerFrame = MIN_ROTATION_PER_FRAME;\n      }\n   }\n   get id() {\n      return this._id;\n   }\n   get target() {\n      return this._target;\n   }\n   get duration() {\n      return this._duration;\n   }\n   get unitsPerSecond() {\n      return this._unitsPerSecond;\n   }\n   get unitsPerFrame() {\n      return this._unitsPerFrame;\n   }\n   set status(status) {\n      this._status = status;\n   }\n   get status() {\n      return this._status;\n   }\n   set initTime(timeInMilliseconds) {\n      this._initTimeInMilliseconds = timeInMilliseconds;\n   }\n   get initTime() {\n      return this._initTimeInMilliseconds;\n   }\n   set x(x) {\n      this._target.x = x;\n   }\n   get x() {\n      return this._target.x;\n   }\n   set y(y) {\n      this._target.y = y;\n   }\n   get y() {\n      return this._target.y;\n   }\n   get width() {\n      return this._target.width || 0;\n   }\n   get height() {\n      return this._target.height || 0;\n   }\n   set rotation(rotation) {\n      if(this._rotateToDirection) {\n         this._target.rotation = rotation;\n      } else {\n         this._rotationProxy = rotation;\n      }\n   }\n   get rotation() {\n      if(this._rotateToDirection) {\n         return this._target.rotation;\n      } else {\n         return this._rotationProxy;\n      }\n   }\n   set destinationX(x) {\n      this._destinationX = x;\n   }\n   get destinationX() {\n      return this._destinationX;\n   }\n   set destinationY(y) {\n      this._destinationY = y;\n   }\n   get destinationY() {\n      return this._destinationY;\n   }\n   get rotationPerSecond() {\n      return this._rotationPerSecond;\n   }\n   get rotationPerFrame() {\n      return this._rotationPerFrame;\n   }\n   get motionDirection() {\n      return this._motionDirection;\n   }\n   set rotateToDirection(bool) {\n      this._rotateToDirection = bool;\n   }\n   get rotateToDirection() {\n      return this._rotateToDirection;\n   }\n   set acquireRotationDirection(acquireRotationDirection) {\n      this._acquireRotationDirection = acquireRotationDirection;\n   }\n   get acquireRotationDirection() {\n      return this._acquireRotationDirection;\n   }\n   set rotationAmount(rotationAmount) {\n      this._rotationAmount = rotationAmount;\n   }\n   get rotationAmount() {\n      return this._rotationAmount;\n   }\n   set rotationDirection(rotationDirection) {\n      this._rotationDirection = rotationDirection;\n   }\n   get rotationDirection() {\n      return this._rotationDirection;\n   }\n   set simulateDepth(simulateDepth) {\n      this._simulateDepth = simulateDepth;\n   }\n   get simulateDepth() {\n      return this._simulateDepth;\n   }\n   set spawnLocation(spawnLocation) {\n      this._spawnLocation = spawnLocation;\n   }\n   get spawnLocation() {\n      return this._spawnLocation;\n   }\n}","var MotionDirection = Object.defineProperties({}, {\n   'CURVE_RANDOM': {\n      enumerable: true,\n      value: 'curveRandom'\n   }\n});\n\nmodule.exports = MotionDirection;","import Rectangle from './rectangle';\nimport MotionDirection from './motion-direction';\nimport RandomMotionAdapter from './motion-adapters/random-motion-adapter';\nimport Timer from './timer';\nimport MotionAsset from './motion-asset';\n\nconst MIN_DURATION = 2000;\nconst MIN_UNITS_PER_SECOND = 30;\nconst MIN_ROTATION_SPEED_MODIFIER = 1;\n\nexport default class MotionEngine {\n   constructor(rect=new Rectangle()) {\n      this._boundingRectangle = rect;\n      this._timer = new Timer();\n      this._adaptersMap = {};\n\n      let randomMotionAdapter = new RandomMotionAdapter(this._boundingRectangle);\n      this._timer.addTimeUpdateListener(randomMotionAdapter.update.bind(randomMotionAdapter));\n\n      this._adaptersMap[MotionDirection.CURVE_RANDOM] = randomMotionAdapter;\n   }\n   get paused(){\n      return this._timer.paused;\n   }\n   start() {\n      this._timer.play();\n   }\n   stop() {\n      this._timer.pause();\n   }\n   addAsset({target=null, motionDirection=MotionDirection.CURVE_RANDOM, duration = MIN_DURATION, unitsPerSecond = MIN_UNITS_PER_SECOND, rotationSpeedModifier = MIN_ROTATION_SPEED_MODIFIER, rotateToDirection = true, simulateDepth = false, spawnLocation = 'outside'} = {}) {\n      // TODO: provide way to map transform (x, y, rotation, scale...) properties to target passed\n      let motionAdapter = this._adaptersMap[motionDirection];\n      if(!motionAdapter) {\n         throw new Error('MotionEngine - No motion adapter found with supplied motion direction of (' + motionDirection + ')');\n      }\n\n      let rotationSpeed = Math.round(unitsPerSecond * rotationSpeedModifier);\n      let motionAsset = new MotionAsset(target, this._timer.time, duration, unitsPerSecond, rotationSpeed, motionDirection, rotateToDirection, simulateDepth, spawnLocation);\n\n      motionAdapter.addAsset(motionAsset);\n\n      return motionAsset;\n   }\n}","export default class Rectangle {\n   constructor({x=0, y=-0, width=0, height=0} = {}) {\n      this._x = x;\n      this._y = y;\n      this._width = width;\n      this._height = height;\n      this._halfWidth = width / 2;\n      this._halfHeight = height / 2;\n      this._eighthWidth = width / 8;\n      this._eighthHeight = height / 8;\n   }\n\n   set x(value){\n      this._x = value;\n   }\n\n   get x(){\n      return this._x;\n   }\n\n   set y(value){\n      this._y = value;\n   }\n\n   get y(){\n      return this._y;\n   }\n\n   set width(value){\n      this._width = value;\n      this._halfWidth = value / 2;\n      this._eighthWidth = value / 8;\n   }\n\n   get width(){\n      return this._width;\n   }\n\n   set height(value){\n      this._height = value;\n      this._halfHeight = value / 2;\n      this._eighthHeight = value / 8;\n   }\n\n   get height(){\n      return this._height;\n   }\n\n   get halfWidth() {\n      return this._halfWidth;\n   }\n\n   get halfHeight() {\n      return this._halfHeight;\n   }\n\n   get eighthWidth() {\n      return this._eighthWidth;\n   }\n\n   get eighthHeight() {\n      return this._eighthHeight;\n   }\n}","export default Object.freeze({\n   BORN: 'born',\n   ALIVE: 'alive',\n   DYING: 'dying',\n   DEAD: 'dead'\n});","export default class Timer {\n   constructor() {\n      this._requestAnimationId = null;\n      this._paused = true;\n      this._currentTime = 0;\n      this._lastTime = 0;\n      this._timeInMilliseconds = 0;\n      this._timeUpdateHandlers = [];\n   }\n   _tick() {\n      this._requestAnimationId = null;\n      this._currentTime = performance.now();\n      this._timeInMilliseconds += (this._currentTime - this._lastTime);\n      this._lastTime = this._currentTime;\n      this._timeUpdateHandlers.every((timeUpdateHandler) => {\n         timeUpdateHandler(this._timeInMilliseconds);\n      });\n      if(!this._paused) {\n         this._requestAnimationId = requestAnimationFrame(() => this._tick());\n      }\n   }\n   get paused() {\n      return this._paused;\n   }\n   get time() {\n      return this._timeInMilliseconds;\n   }\n   addTimeUpdateListener(eventHandler) {\n      this._timeUpdateHandlers.push(eventHandler);\n   }\n   play() {\n      this._paused = false;\n      this._lastTime = performance.now();\n      this._requestAnimationId = requestAnimationFrame(() => this._tick());\n   }\n   pause() {\n      if(this._requestAnimationId) {\n         cancelAnimationFrame(this._requestAnimationId);\n         this._requestAnimationId = null;\n      }\n      this._paused = true;\n   }\n}"]}